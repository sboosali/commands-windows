
==================== FINAL INTERFACE ====================
2016-04-29 09:26:28.0867845 UTC

interface workf_3hOfrHFgpeyI6QXBqUkncU:Workflow.Bindings 7103
  interface hash: 8522cbb1346eadc9a99b6a680c5fb97b
  ABI hash: cc771007f0057e744fad32820d28b814
  export-list hash: 0158101785ca726d9f77ca9a86f0ec1f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: fc6f0d99b859fc0860d0ea646b8fc376
  sig of: Nothing
  used TH splices: False
  where
exports:
  Workflow.Bindings._Workflow
  Workflow.Bindings.c_Workflow
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Foreign ec20bd347d2cd5725d5d866b512c9fb0
import  -/  base-4.8.2.0:Foreign.C.String 99d836c372a4d8d366e859bab018025e
import  -/  base-4.8.2.0:GHC.Base a4939789b2cfd60b36ed163e56a623cd
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
addDependentFile "native\calling_convention.h"
addDependentFile "C:\Users\Maria\AppData\Local\Programs\stack\x86_64-windows\ghc-7.10.3\lib\include\ghcversion.h"
addDependentFile ".stack-work\dist\2672c1f3\build\autogen\cabal_macros.h"
8e2a49a6b9d0f1a3f4ff32472f9dbecf
  _Workflow :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Workflow.Bindings._Workflow1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R)) -}
2463e84dc03a83c21f32a3cd4c2de342
  _Workflow1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case {__pkg_ccall_GC workf_3hOfrHFgpeyI6QXBqUkncU Workflow GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                            -> (# GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld,
                                                                                  GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case GHC.IO.Encoding.getForeignEncoding1 of wild1 { (,) getForeignEncoding4 setForeignEncoding1 ->
                 case getForeignEncoding4
                        `cast`
                      (GHC.Types.NTCo:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 GHC.Foreign.$wa ipv1 ds1 ipv } } }) -}
cfc8ea3f1e8846452ab99d69b1db2482
  c_Workflow :: GHC.Types.IO Foreign.C.String.CString
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, False, False)
                (\ ds :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case {__pkg_ccall_GC workf_3hOfrHFgpeyI6QXBqUkncU Workflow GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                            -> (# GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld,
                                                                                  GHC.Prim.Addr# #)}
                        ds of wild { (#,#) ds1 ds2 ->
                 (# ds1, GHC.Ptr.Ptr @ Foreign.C.Types.CChar ds2 #) })
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0]
                          <GHC.Ptr.Ptr Foreign.C.Types.CChar>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

