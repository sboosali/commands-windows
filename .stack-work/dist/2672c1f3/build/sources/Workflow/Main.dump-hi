
==================== FINAL INTERFACE ====================
2016-04-29 09:26:28.2836642 UTC

interface workf_3hOfrHFgpeyI6QXBqUkncU:Workflow.Main 7103
  interface hash: ecaf57af1981f10f29f125b170aa5388
  ABI hash: 053bf3a9bdbbc8a3e38e277d720ae306
  export-list hash: 30529bcf478ca6388263e165525e3a1a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8133b340bc31da54d5c03282c269ca4
  sig of: Nothing
  used TH splices: False
  where
exports:
  Workflow.Main.main
module dependencies: Workflow.Bindings
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base a4939789b2cfd60b36ed163e56a623cd
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 638c10c4fd4901a0aca5b77c9f14123d
import  -/  Workflow.Bindings cc771007f0057e744fad32820d28b814
  exports: 0158101785ca726d9f77ca9a86f0ec1f
  _Workflow 8e2a49a6b9d0f1a3f4ff32472f9dbecf
fe2a7e20d664d37724589a3d512caf76
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Workflow.Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
3c280057ddca00deac374a52526e610b
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case {__pkg_ccall_GC workf_3hOfrHFgpeyI6QXBqUkncU Workflow GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                            -> (# GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld,
                                                                                  GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case GHC.IO.Encoding.getForeignEncoding1 of wild1 { (,) getForeignEncoding4 setForeignEncoding1 ->
                 case getForeignEncoding4
                        `cast`
                      (GHC.Types.NTCo:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.$wa ipv1 ds1 ipv of ds4 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.$fShow[]_$s$cshow1 ipv3)
                   GHC.Types.True
                   ipv2 } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

